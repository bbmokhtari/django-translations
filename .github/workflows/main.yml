name: Main
on:
  push:
    branches:
      - master
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  pull_request:
jobs:
  lint:
    name: Lint with Flake8
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        flake8-version: ["5.0"]
    env:
      EXAMPLE_ENGINE: sqlite3
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install flake8~=${{ matrix.flake8-version }}
      - name: Run Flake8
        run: flake8
  test-units:
    name: Test units
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        django-version:
          ["2.2", "3.0", "3.1", "3.2", "4.0", "4.1", "4.2", "5.0", "5.1"]
        djangorestframework-version: ["3.1"]
        database: ["sqlite3", "mysql", "postgresql"]
        exclude:
          - python-version: "3.10"
            django-version: "2.2"
          - python-version: "3.11"
            django-version: "2.2"
          - python-version: "3.12"
            django-version: "2.2"
          - python-version: "3.13"
            django-version: "2.2"
          - python-version: "3.10"
            django-version: "3.0"
          - python-version: "3.11"
            django-version: "3.0"
          - python-version: "3.12"
            django-version: "3.0"
          - python-version: "3.13"
            django-version: "3.0"
          - python-version: "3.10"
            django-version: "3.1"
          - python-version: "3.11"
            django-version: "3.1"
          - python-version: "3.12"
            django-version: "3.1"
          - python-version: "3.13"
            django-version: "3.1"
          - python-version: "3.11"
            django-version: "3.2"
          - python-version: "3.12"
            django-version: "3.2"
          - python-version: "3.13"
            django-version: "3.2"
          - python-version: "3.7"
            django-version: "4.0"
          - python-version: "3.11"
            django-version: "4.0"
          - python-version: "3.12"
            django-version: "4.0"
          - python-version: "3.13"
            django-version: "4.0"
          - python-version: "3.7"
            django-version: "4.1"
          - python-version: "3.12"
            django-version: "4.1"
          - python-version: "3.13"
            django-version: "4.1"
          - python-version: "3.7"
            django-version: "4.2"
          - python-version: "3.13"
            django-version: "4.2"
          - python-version: "3.7"
            django-version: "5.0"
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.0"
          - python-version: "3.13"
            django-version: "5.0"
          - python-version: "3.7"
            django-version: "5.1"
          - python-version: "3.8"
            django-version: "5.1"
          - python-version: "3.9"
            django-version: "5.1"
    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_DATABASE: example
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: example
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      EXAMPLE_ENGINE: ${{ matrix.database }}
      EXAMPLE_NAME: ${{ matrix.database == 'mysql' && 'example' || matrix.database == 'postgresql' && 'example' || 'db.sqlite3' }}
      EXAMPLE_HOST: ${{ matrix.database == 'mysql' && '127.0.0.1' || matrix.database == 'postgresql' && '127.0.0.1' || '' }}
      EXAMPLE_PORT: ${{ matrix.database == 'mysql' && '3306' || matrix.database == 'postgresql' && '5432' || '' }}
      EXAMPLE_USER: ${{ matrix.database == 'mysql' && 'root' || matrix.database == 'postgresql' && 'user' || '' }}
      EXAMPLE_PASSWORD: ${{ matrix.database == 'mysql' && 'password' || matrix.database == 'postgresql' && 'password' || '' }}
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install django~=${{ matrix.django-version }}
          pip install djangorestframework~=${{ matrix.djangorestframework-version }}
          pip install mysqlclient
          pip install psycopg2-binary
      - name: Wait for MySQL to be ready
        if: matrix.database == 'mysql'
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready!"
              break
            else
              echo "Waiting for MySQL to be ready... ($i/30)"
              sleep 2
            fi
          done
      - name: Wait for PostgreSQL to be ready
        if: matrix.database == 'postgresql'
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -U user; then
              echo "PostgreSQL is ready!"
              break
            else
              echo "Waiting for PostgreSQL to be ready... ($i/30)"
              sleep 2
            fi
          done
      - name: Create example project
        run: python create.py
      - name: Run and test units
        run: python project/manage.py test -v 3
  test-docs:
    name: Test documentations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        django-version:
          ["2.2", "3.0", "3.1", "3.2", "4.0", "4.1", "4.2", "5.0", "5.1"]
        djangorestframework-version: ["3.1"]
        sphinx-version: ["5.3", "7.4"]
        exclude:
          - python-version: "3.10"
            django-version: "2.2"
          - python-version: "3.11"
            django-version: "2.2"
          - python-version: "3.12"
            django-version: "2.2"
          - python-version: "3.13"
            django-version: "2.2"
          - python-version: "3.10"
            django-version: "3.0"
          - python-version: "3.11"
            django-version: "3.0"
          - python-version: "3.12"
            django-version: "3.0"
          - python-version: "3.13"
            django-version: "3.0"
          - python-version: "3.10"
            django-version: "3.1"
          - python-version: "3.11"
            django-version: "3.1"
          - python-version: "3.12"
            django-version: "3.1"
          - python-version: "3.13"
            django-version: "3.1"
          - python-version: "3.11"
            django-version: "3.2"
          - python-version: "3.12"
            django-version: "3.2"
          - python-version: "3.13"
            django-version: "3.2"
          - python-version: "3.7"
            django-version: "4.0"
          - python-version: "3.11"
            django-version: "4.0"
          - python-version: "3.12"
            django-version: "4.0"
          - python-version: "3.13"
            django-version: "4.0"
          - python-version: "3.7"
            django-version: "4.1"
          - python-version: "3.12"
            django-version: "4.1"
          - python-version: "3.13"
            django-version: "4.1"
          - python-version: "3.7"
            django-version: "4.2"
          - python-version: "3.13"
            django-version: "4.2"
          - python-version: "3.7"
            django-version: "5.0"
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.0"
          - python-version: "3.13"
            django-version: "5.0"
          - python-version: "3.7"
            django-version: "5.1"
          - python-version: "3.8"
            django-version: "5.1"
          - python-version: "3.9"
            django-version: "5.1"
          - python-version: "3.7"
            sphinx-version: "7.4"
          - python-version: "3.8"
            sphinx-version: "7.4"
          - python-version: "3.9"
            sphinx-version: "7.4"
          - python-version: "3.10"
            sphinx-version: "7.4"
          - python-version: "3.11"
            sphinx-version: "7.4"
          - python-version: "3.12"
            sphinx-version: "5.3"
          - python-version: "3.13"
            sphinx-version: "5.3"
    env:
      EXAMPLE_ENGINE: sqlite3
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install django~=${{ matrix.django-version }}
          pip install djangorestframework~=${{ matrix.djangorestframework-version }}
          pip install sphinx~=${{ matrix.sphinx-version }}
      - name: Create example project
        run: python create.py
      - name: Create configurations file
        run: python config.py
      - name: Run and test documentations
        run: make --directory docs doctest
  build-docs:
    name: Build documentations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        django-version:
          ["2.2", "3.0", "3.1", "3.2", "4.0", "4.1", "4.2", "5.0", "5.1"]
        djangorestframework-version: ["3.1"]
        sphinx-version: ["5.3", "7.4"]
        exclude:
          - python-version: "3.10"
            django-version: "2.2"
          - python-version: "3.11"
            django-version: "2.2"
          - python-version: "3.12"
            django-version: "2.2"
          - python-version: "3.13"
            django-version: "2.2"
          - python-version: "3.10"
            django-version: "3.0"
          - python-version: "3.11"
            django-version: "3.0"
          - python-version: "3.12"
            django-version: "3.0"
          - python-version: "3.13"
            django-version: "3.0"
          - python-version: "3.10"
            django-version: "3.1"
          - python-version: "3.11"
            django-version: "3.1"
          - python-version: "3.12"
            django-version: "3.1"
          - python-version: "3.13"
            django-version: "3.1"
          - python-version: "3.11"
            django-version: "3.2"
          - python-version: "3.12"
            django-version: "3.2"
          - python-version: "3.13"
            django-version: "3.2"
          - python-version: "3.7"
            django-version: "4.0"
          - python-version: "3.11"
            django-version: "4.0"
          - python-version: "3.12"
            django-version: "4.0"
          - python-version: "3.13"
            django-version: "4.0"
          - python-version: "3.7"
            django-version: "4.1"
          - python-version: "3.12"
            django-version: "4.1"
          - python-version: "3.13"
            django-version: "4.1"
          - python-version: "3.7"
            django-version: "4.2"
          - python-version: "3.13"
            django-version: "4.2"
          - python-version: "3.7"
            django-version: "5.0"
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.0"
          - python-version: "3.13"
            django-version: "5.0"
          - python-version: "3.7"
            django-version: "5.1"
          - python-version: "3.8"
            django-version: "5.1"
          - python-version: "3.9"
            django-version: "5.1"
          - python-version: "3.7"
            sphinx-version: "7.4"
          - python-version: "3.8"
            sphinx-version: "7.4"
          - python-version: "3.9"
            sphinx-version: "7.4"
          - python-version: "3.10"
            sphinx-version: "7.4"
          - python-version: "3.11"
            sphinx-version: "7.4"
          - python-version: "3.12"
            sphinx-version: "5.3"
          - python-version: "3.13"
            sphinx-version: "5.3"
    env:
      EXAMPLE_ENGINE: sqlite3
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install django~=${{ matrix.django-version }}
          pip install djangorestframework~=${{ matrix.djangorestframework-version }}
          pip install sphinx~=${{ matrix.sphinx-version }}
      - name: Create example project
        run: python create.py
      - name: Create configurations file
        run: python config.py
      - name: Build documentations
        run: make --directory docs html
  upload-docs:
    name: Upload documentations for GitHub Pages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
        django-version: ["4.2"]
        djangorestframework-version: ["3.1"]
        sphinx-version: ["5.3"]
    needs: [lint, test-units, test-docs, build-docs]
    if: startsWith(github.ref, 'refs/tags/')
    env:
      EXAMPLE_ENGINE: sqlite3
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install django~=${{ matrix.django-version }}
          pip install djangorestframework~=${{ matrix.djangorestframework-version }}
          pip install sphinx~=${{ matrix.sphinx-version }}
      - name: Create example project
        run: python create.py
      - name: Create configurations file
        run: python config.py
      - name: Build documentations
        run: make --directory docs html
      - name: Upload built documentations as pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html
  deploy-pypi:
    name: Build and deploy package to PyPI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    needs: [upload-docs]
    if: startsWith(github.ref, 'refs/tags/')
    env:
      EXAMPLE_ENGINE: sqlite3
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build
      - name: Create configurations file
        run: python config.py
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
  deploy-docs:
    name: Deploy documentations to GitHub Pages
    runs-on: ubuntu-latest
    needs: [deploy-pypi]
    if: startsWith(github.ref, 'refs/tags/')
    env:
      EXAMPLE_ENGINE: sqlite3
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
